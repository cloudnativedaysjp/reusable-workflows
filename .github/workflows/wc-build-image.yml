name: build Docker image

on:
  workflow_call:
    inputs:
      image_name:
        type: string
        required: true
      aws_region:
        type: string
        required: true
      dockerfile_path:
        type: string
        default: ./Dockerfile
      platforms:
        type: string
        default: linux/amd64
      build_args:
        type: string
      run-trivy:
        type: boolean
        default: false
      aws_role_to_assume:
        description: >
          AWS IAM Role to assume using GitHub OIDC Provider.
          To use it, you have to update `allowed_github_repositories` in
          https://github.com/cloudnativedaysjp/terraform/blob/main/github_actions_assume_aws_role/main.tf
        type: string
        default: "arn:aws:iam::607167088920:role/github-actions-dreamkast"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@b47578312673ae6fa5b5096b330d9fbac3d116df # v4.2.1
        with:
          role-to-assume: ${{ inputs.aws_role_to_assume }}
          aws-region: ${{ inputs.aws_region }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1

      - name: Check
        id: is-default-branch-pushed
        run: |
          default_branch=$(git symbolic-ref refs/remotes/origin/HEAD | awk -F'[/]' '{print $NF}')
          if [ "${{ github.ref_name }}" = "${default_branch}" ]; then
            echo "result=true" >> "$GITHUB_OUTPUT"
          else
            echo "result=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          images: ${{ steps.login-ecr.outputs.registry }}/${{ inputs.image_name }}
          tags: |
            prefix=commit-,type=sha,format=long
            prefix=main-,type=sha,format=long,enable=${{steps.is-default-branch-pushed.outputs.result}}
            prefix=branch-,type=ref,event=branch
            prefix=release-,type=ref,event=tag

      - name: Build
        id: docker_build
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: ./
          file: ${{ inputs.DOCKERFILE_PATH }}
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: ${{ inputs.build_args }}
          platforms: ${{ inputs.platforms }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@76071ef0d7ec797419534a183b498b4d6366cf37 # 0.31.0
        if: ${{ inputs.run-trivy == true }}
        with:
          image-ref: ${{ steps.login-ecr.outputs.registry }}/${{ inputs.image_name }}:commit-${{ github.sha }}
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
