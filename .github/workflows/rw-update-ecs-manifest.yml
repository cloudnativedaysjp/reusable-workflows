name: update ECS manifests as known as GitOps

on:
  workflow_call:
    inputs:
      environment:
        description: environment name in dreamkast-infra repository
        type: string
        required: true
      target-image:
        description: image name in const.libsonnet in dreamkast-infra repository
        type: string
      reviewapp_aws_region:
        description: required when environment is reviewapps
        type: string
      reviewapp_pr_commit:
        description: required when environment is reviewapps
        type: string
      reviewapp_pr_number:
        description: required when environment is reviewapps
        type: string
    secrets:
      APP_ID:
        description: the ID of GitHub App with the role that pull/push to dreamkast-infra
        required: true
      APP_PRIVATE_KEY:
        description: the private key of GitHub App with the role that pull/push to dreamkast-infra
        required: true
      AWS_ACCESS_KEY_ID:
        description: required when environment is reviewapps
        required: false
      AWS_SECRET_ACCESS_KEY:
        description: required when environment is reviewapps
        required: false

jobs:
  gitops:
    runs-on: ubuntu-latest
    steps:
      - name: Set current unixtime as env variable
        env:
          TZ: 'Asia/Tokyo'
        run: echo "UNIXTIME=$(date +'+%s')" >> $GITHUB_ENV

      - name: Install Go
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0

      - name: Install jsonnet
        run: |
          go install github.com/google/go-jsonnet/cmd/jsonnet@latest
          go install github.com/google/go-jsonnet/cmd/jsonnetfmt@latest

      - name: Generate token
        id: app-token
        uses: actions/create-github-app-token@3ff1caaa28b64c9cc276ce0a02e2ff584f3900c5 # v2.0.2
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          owner: cloudnativedaysjp
          repositories: dreamkast-infra
          permission-contents: write
          permission-pull-requests: write

      - name: Checkout dreamkast-infra
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: cloudnativedaysjp/dreamkast-infra
          path: dreamkast-infra
          token: ${{ steps.app-token.outputs.token }}

      - name: Update image-tags
        if: inputs.environment != 'reviewapps'
        working-directory: dreamkast-infra/ecspresso/${{ inputs.environment }}
        run: |
          if [ "${{ inputs.environment }}" == "prod" ]; then
            # For production, use the git tag name as the docker image's tag 
            IMAGE_TAG=${GITHUB_REF#refs/*/}
          elif [ "${{ inputs.environment }}" == "stg" ]; then
            # For staging, use the commit hash as the docker image's tag 
            IMAGE_TAG=${{ github.sha }}
          else
            echo "unknown environments: ${{ inputs.environment }}"
            exit 1
          fi

          cat << _EOL_ | jsonnet - > ./const.libsonnet.tmp
          local const = import './const.libsonnet';

          const + {
            imageTags: const.imageTags + {
              ${{ inputs.target-image }}: "${IMAGE_TAG}",
            },
          }
          _EOL_
          mv const.libsonnet.tmp const.libsonnet
          jsonnetfmt -i const.libsonnet

      - name: Configure AWS Credentials
        if: inputs.environment == 'reviewapps'
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722 # v4.1.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.reviewapp_aws_region }}

      - name: Create reviewapps
        if: inputs.environment == 'reviewapps'
        working-directory: dreamkast-infra/
        run: ecspresso/reviewapps/build-reviewapp.sh
        env:
          REPOSITORY_NAME: ${{ github.repository }}
          PR_NUMBER: ${{ inputs.reviewapp_pr_number }}
          IMAGE_TAG: ${{ inputs.reviewapp_pr_commit }}

      - id: commit-message
        run: |
          echo "out<<---" >> "$GITHUB_OUTPUT"

          if [ "${{ inputs.environment }}" == "prod" ]; then
          cat << _EOM_ >> "$GITHUB_OUTPUT"
          Bump docker tag by ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/releases/tag/${GITHUB_REF#refs/*/}
          action URL: ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}
          _EOM_

          elif [ "${{ inputs.environment }}" == "stg" ]; then
          cat << _EOM_ >> "$GITHUB_OUTPUT"
          Bump docker tag by ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/releases/tag/${{github.sha}}
          action URL: ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}
          _EOM_

          elif [ "${{ inputs.environment }}" == "reviewapps" ]; then
          cat << _EOM_ >> "$GITHUB_OUTPUT"
          Bump docker tag by ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/pull/${{ inputs.reviewapp_pr_number }}
          commit: ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/commit/${{ inputs.reviewapp_pr_commit }}
          action URL: ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}
          _EOM_

          fi
          echo "---" >> "$GITHUB_OUTPUT"

      - name: Commit files
        id: commit_files
        continue-on-error: true
        working-directory: dreamkast-infra/
        run: |
          APP_USER_ID=$(curl -sSL --globoff "https://api.github.com/users/${{ steps.app-token.outputs.app-slug }}[bot]" | jq -r .id)

          git config --local user.name "${{ steps.app-token.outputs.app-slug }}[bot]"
          git config --local user.email "${APP_USER_ID}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com"
          git status
          git add -A
          git commit -a -F- <<EOM
          ${{ steps.commit-message.outputs.out }}
          EOM

      - name: Push changes
        if: steps.commit_files.outcome == 'success'
        uses: ad-m/github-push-action@d91a481090679876dfc4178fef17f286781251df # v0.8.0
        with:
          github_token: ${{ steps.app-token.outputs.token }}
          repository: cloudnativedaysjp/dreamkast-infra
          directory: dreamkast-infra
          branch: gitops/reviewapps/${{ github.repository }}/${{ env.UNIXTIME }}

      - name: Create and merge PR
        if: steps.commit_files.outcome == 'success'
        uses: "actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea" # v7.0.1
        with:
          github-token: ${{ steps.app-token.outputs.token }}
          script: |
            const pr = await github.rest.pulls.create({
              owner: "cloudnativedaysjp",
              repo: "dreamkast-infra",
              title: "Automated PR (gitops/reviewapps/${{ github.repository }})",
              body: "**this PR is automatically created & merged**",
              head: "gitops/reviewapps/${{ github.repository }}/${{ env.UNIXTIME }}",
              base: "main"
            });
            await github.rest.pulls.merge({
              owner: "cloudnativedaysjp",
              repo: "dreamkast-infra",
              pull_number: pr.data.number,
              merge_method: "squash",
            });
