name: update ECS manifests as known as GitOps

on:
  workflow_call:
    inputs:
      environment:
        description: environment name in dreamkast-infra repository
        type: string
        required: true
      target-image:
        description: image name in const.libsonnet in dreamkast-infra repository
        type: string
      reviewapp_aws_region:
        description: required when environment is reviewapps
        type: string
      reviewapp_pr_commit:
        description: required when environment is reviewapps
        type: string
      reviewapp_pr_number:
        description: required when environment is reviewapps
        type: string
      reviewapp_aws_role_to_assume:
        description: required when environment is reviewapps
        type: string
    secrets:
      APP_ID:
        description: the ID of GitHub App with the role that pull/push to dreamkast-infra
        required: true
      APP_PRIVATE_KEY:
        description: the private key of GitHub App with the role that pull/push to dreamkast-infra
        required: true

jobs:
  gitops:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    timeout-minutes: 10
    steps:
      - name: Set current unixtime as env variable
        env:
          TZ: 'Asia/Tokyo'
        run: echo "UNIXTIME=$(date +'+%s')" >> "$GITHUB_ENV"

      - name: Install Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0

      - name: Install jsonnet
        run: |
          go install github.com/google/go-jsonnet/cmd/jsonnet@latest
          go install github.com/google/go-jsonnet/cmd/jsonnetfmt@latest

      - name: Generate token
        id: app-token
        uses: actions/create-github-app-token@a8d616148505b5069dccd32f177bb87d7f39123b # v2.1.1
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          owner: cloudnativedaysjp
          repositories: dreamkast-infra
          permission-contents: write
          permission-pull-requests: write

      - name: Checkout dreamkast-infra
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          persist-credentials: false
          repository: cloudnativedaysjp/dreamkast-infra

      - name: Update image-tags
        if: inputs.environment != 'reviewapps'
        working-directory: ecspresso/${{ inputs.environment }}
        run: |
          if [ "${{ inputs.environment }}" == "prod" ]; then
            # For production, use the git tag name as the docker image's tag
            IMAGE_TAG=release-${GITHUB_REF#refs/*/}
          elif [ "${{ inputs.environment }}" == "stg" ]; then
            # For staging, use the commit hash as the docker image's tag
            IMAGE_TAG=main-${{ github.sha }}
          else
            echo "unknown environments: ${{ inputs.environment }}"
            exit 1
          fi

          cat << _EOL_ | jsonnet - > ./const.libsonnet.tmp
          local const = import './const.libsonnet';

          const + {
            imageTags: const.imageTags + {
              ${{ inputs.target-image }}: "${IMAGE_TAG}",
            },
          }
          _EOL_
          mv const.libsonnet.tmp const.libsonnet
          jsonnetfmt -i const.libsonnet

      - name: Configure AWS Credentials (OIDC)
        if: inputs.environment == 'reviewapps'
        uses: aws-actions/configure-aws-credentials@a03048d87541d1d9fcf2ecf528a4a65ba9bd7838 # v5.0.0
        with:
          role-to-assume: ${{ inputs.reviewapp_aws_role_to_assume }}
          aws-region: ${{ inputs.reviewapp_aws_region }}

      - name: Create reviewapps
        if: inputs.environment == 'reviewapps'
        run: ecspresso/reviewapps/build-reviewapp.sh
        env:
          REPOSITORY_NAME: ${{ github.repository }}
          PR_NUMBER: ${{ inputs.reviewapp_pr_number }}
          IMAGE_TAG: commit-${{ inputs.reviewapp_pr_commit }}

      - name: check diff
        id: check-diff
        run: |
          git add . --intent-to-add
          if git diff --exit-code --quiet HEAD --; then
            echo "changes=false" >> "$GITHUB_OUTPUT"
          else
            echo "changes=true" >> "$GITHUB_OUTPUT"
          fi

      - id: commit-message
        if: steps.check-diff.outputs.changes == 'true'
        run: |
          echo "out<<---" >> "$GITHUB_OUTPUT"

          if [ "${{ inputs.environment }}" == "prod" ]; then
          cat << _EOM_ >> "$GITHUB_OUTPUT"
          Bump docker tag by ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/releases/tag/${GITHUB_REF#refs/*/}
          action URL: ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}
          _EOM_

          elif [ "${{ inputs.environment }}" == "stg" ]; then
          cat << _EOM_ >> "$GITHUB_OUTPUT"
          Bump docker tag by ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/commit/${{github.sha}}
          action URL: ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}
          _EOM_

          elif [ "${{ inputs.environment }}" == "reviewapps" ]; then
          cat << _EOM_ >> "$GITHUB_OUTPUT"
          Bump docker tag by ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/pull/${{ inputs.reviewapp_pr_number }}
          commit: ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/commit/${{ inputs.reviewapp_pr_commit }}
          action URL: ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}
          _EOM_

          fi
          echo "---" >> "$GITHUB_OUTPUT"

      - name: Commit files
        if: steps.check-diff.outputs.changes == 'true'
        uses: suzuki-shunsuke/commit-action@ca8e761ccb3533295065c3e90a8555fcdde8b467 # v0.0.10
        with:
          repository: cloudnativedaysjp/dreamkast-infra
          branch: gitops/${{ inputs.environment }}/${{ github.repository }}/${{ env.UNIXTIME }}
          github_token: ${{ steps.app-token.outputs.token }}
          commit_message: |
            ${{ steps.commit-message.outputs.out }}

      - name: Create and merge PR
        if: steps.check-diff.outputs.changes == 'true'
        uses: "actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea" # v7.0.1
        with:
          github-token: ${{ steps.app-token.outputs.token }}
          script: |
            const pr = await github.rest.pulls.create({
              owner: "cloudnativedaysjp",
              repo: "dreamkast-infra",
              title: "Automated PR (gitops/${{ inputs.environment }}/${{ github.repository }})",
              body: "**this PR is automatically created & merged**",
              head: "gitops/${{ inputs.environment }}/${{ github.repository }}/${{ env.UNIXTIME }}",
              base: "main"
            });
            await github.rest.pulls.merge({
              owner: "cloudnativedaysjp",
              repo: "dreamkast-infra",
              pull_number: pr.data.number,
              merge_method: "squash",
            });
